Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/modules.xml	(revision )
+++ .idea/modules.xml	(revision )
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/spiderweb.iml" filepath="$PROJECT_DIR$/.idea/spiderweb.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: filteurl.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- filteurl.py	(revision )
+++ filteurl.py	(revision )
@@ -0,0 +1,59 @@
+# coding: utf-8
+import urlparse
+
+
+class filteurl:
+    def __init__(self, url):
+        self.url = url
+
+    def judgetype(self, strs):
+        try:
+            int(strs)
+            return 'int'
+        except:
+            return 'str'
+
+    def json_filte(self):
+        urls = urlparse.urlparse(self.url)
+        liststr = []
+        try:
+            for i in urls.query.split('&'):
+                para = i.split('=')
+                length_int = len(para[1])
+                if self.judgetype(para[1]) == 'int':
+                    para[1] = 'int[%s]' % length_int
+                else:
+                    para[1] = 'str[%s]' % length_int
+                para = '='.join(para)
+                liststr.append(para)
+            url_paras = '&'.join(liststr)
+            return urls.scheme + '://' + urls.netloc + urls.path + '?' + url_paras
+        except:
+            length_int = len(urls.query)
+            url_paras = self.judgetype(urls.query) + '[%s]' % length_int
+            return urls.scheme + '://' + urls.netloc + urls.path + '?' + url_paras
+
+    def Pseudo_static_filte(self):
+        url = self.url
+        urls = urlparse.urlparse(url)
+        if urls.query != '':
+            url = self.json_filte()
+        urls = urlparse.urlparse(url)
+        pathlist = urls.path
+        pathlisted = []
+        for i in pathlist:
+            if i == '/':
+                pathlisted.append(i)
+            pathlisted.append(self.judgetype(i))
+        # print pathlisted
+        # print ''.join(pathlisted)
+        if urls.query != '':
+            return urls.scheme + '://' + urls.netloc + ','.join(pathlisted) + '?' + urls.query
+        else:
+            return urls.scheme + '://' + urls.netloc + ','.join(pathlisted)
+
+
+if __name__ == '__main__':
+    urlss = 'http://www.mianxian.gov.cn/zxft/20483.htm?dsdsa'
+    p = filteurl(urlss)
+    print p.Pseudo_static_filte()
Index: mian.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- mian.py	(revision )
+++ mian.py	(revision )
@@ -0,0 +1,28 @@
+# coding: utf-8
+import os
+from urlparse import urlparse
+
+
+class main:
+    def __init__(self, domian):
+        self.url = domian
+        domain = urlparse(domian)
+        self.new_path = os.path.join('result', domain.netloc)
+        if not os.path.isdir(self.new_path):
+            os.makedirs(self.new_path)
+        domain = domain.netloc.split('.')
+        self.domain = domain[-2] + '.' + domain[-1]
+
+    def start(self):
+        print self.url
+        print self.get_domain()
+
+    def get_domain(self):
+        # domain=urlparse(self.domain).netloc.split('.')
+        # domain.netloc.split('.')
+        return self.domain
+
+
+if __name__ == '__main__':
+    itm = main('http://www.tencent.com/dasdasdas/')
+    itm.start()
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/vcs.xml	(revision )
+++ .idea/vcs.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/spiderweb.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/spiderweb.iml	(revision )
+++ .idea/spiderweb.iml	(revision )
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="PYTHON_MODULE" version="4">
+  <component name="NewModuleRootManager">
+    <content url="file://$MODULE_DIR$" />
+    <orderEntry type="jdk" jdkName="Python 2.7.10 (D:\python\python27\python.exe)" jdkType="Python SDK" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: browsermob-proxy-2.1.2/bin/conf/bmp-logging.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- browsermob-proxy-2.1.2/bin/conf/bmp-logging.yaml	(revision )
+++ browsermob-proxy-2.1.2/bin/conf/bmp-logging.yaml	(revision )
@@ -0,0 +1,37 @@
+# This file controls the logging configuration for browsermob-proxy in "standalone" mode. To adjust the amount of log output, modify the
+# 'level' fields below. For more information on log4j configuration files, see http://logging.apache.org/log4j/2.x/manual/configuration.html.
+
+configuration:
+  name: standalone
+  appenders:
+    console:
+      name: console
+      target: SYSTEM_OUT
+      PatternLayout:
+        pattern: "[%-5level %date{ISO8601} %logger] (%thread) %msg %xThrowable%n"
+    file:
+      -
+        name: file
+        fileName: bmp.log
+        PatternLayout:
+          pattern: "[%-5level %date{ISO8601} %logger] (%thread) %msg %xThrowable%n"
+        append: false
+  loggers:
+    logger:
+      -
+        name: net.lightbody.bmp.proxy.jetty.util.ThreadedServer
+        level: warn
+        additivity: false
+      -
+        name: net.lightbody.bmp
+        # to suppress unwanted BMP logging statements, set the level below for the source logger to WARN or ERROR.
+        # to enable more verbose logging, set the level to DEBUG or TRACE.
+        level: info
+    root:
+      # to suppress unwanted logging statements globally, set the level below to WARN or ERROR.
+      level: info
+      appender-ref:
+        -
+          ref: console
+        -
+          ref: file
\ No newline at end of file
Index: browsermob-proxy-2.1.2/ssl-support/ca-certificate-rsa.cer
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- browsermob-proxy-2.1.2/ssl-support/ca-certificate-rsa.cer	(revision )
+++ browsermob-proxy-2.1.2/ssl-support/ca-certificate-rsa.cer	(revision )
@@ -0,0 +1,21 @@
+-----BEGIN CERTIFICATE-----
+MIIDfzCCAmegAwIBAgIVAMFQpicWi3EjPX08LgeuA8nAOEfIMA0GCSqGSIb3DQEB
+DQUAMEYxGTAXBgNVBAMMEExpdHRsZVByb3h5IE1JVE0xKTAnBgNVBAoMIExpdHRs
+ZVByb3h5IFJTQSBJbXBlcnNvbmF0aW9uIENBMB4XDTE1MDEwMjAwMDAwMFoXDTI1
+MDEwMjAwMDAwMFowRjEZMBcGA1UEAwwQTGl0dGxlUHJveHkgTUlUTTEpMCcGA1UE
+CgwgTGl0dGxlUHJveHkgUlNBIEltcGVyc29uYXRpb24gQ0EwggEiMA0GCSqGSIb3
+DQEBAQUAA4IBDwAwggEKAoIBAQC141M+lc046DJaNqIARozRPROGt/s5Ng1UOE84
+tKhd+M/REaOeNovW+42uMa4ZifJAK7Csc0dx54Iq35LXy0tMw6ly/MB0pFi+aFCJ
+VzXZhbAWIsUmjU8t6z2Y0sjKVX/g3HkdXqaX94jlDtsTjeQXvFhiJNRlX/Locc/f
+/oNYZWhg7IPGyQglRY9Dco9kZMSbh5y0yfM8002PNPbNOP4dMX4yYqovT90XbvQ2
+rCBbiS6Cys7j44vwOcra9srlb3YQiOCOsYCf7eIhT1GH8tqQ84CHblufqxcGIvXv
+V1ex6bDFy63tiPySsOwuVnZglkQ0MDl1GMKVySdPw/qQM5v9AgMBAAGjZDBiMB0G
+A1UdDgQWBBRFMQtpkCyZIK9NxaEJDvbfaV1QOzAPBgNVHRMBAf8EBTADAQH/MAsG
+A1UdDwQEAwIBtjAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAw
+DQYJKoZIhvcNAQENBQADggEBAJuYv1NuxPHom579iAjs19YrFGewHpv4aZC7aWTt
+oC1y9418w7QzVOAz2VzluURazUdg/HS9s8abJ8IS0iD0xLz0B1cvJ6F2BezjAwyG
+2LxZggmBdLqwjdRkX0Mx3a2HqUpEqaNeKyE8VmzwPuDHN1AqbFcuOPHN7fm7kAtL
+4bxFmjgSt7PjEdYwysdjkLC6m+236tuFydpVkXMjuBthsk/hZ1Y/3tbCj/B9a9//
+5O+HhYEy+Oa64iFvxfgDfKKUQR3VmwThj1Dh2iJw/kbPJEuQ/PtfcnQhOqyliwg6
+Edxd1kaO4HU8Am6TwpmpPFWHRqhM2xj2PAGyfFtN1WfBEQ4=
+-----END CERTIFICATE-----
Index: bmp.log
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- bmp.log	(revision )
+++ bmp.log	(revision )
@@ -0,0 +1,7 @@
+[INFO  2016-11-03T19:41:34,747 net.lightbody.bmp.proxy.Main] (main) Starting BrowserMob Proxy version 2.1.2 
+[INFO  2016-11-03T19:41:34,776 org.eclipse.jetty.util.log] (main) jetty-7.x.y-SNAPSHOT 
+[INFO  2016-11-03T19:41:34,869 org.eclipse.jetty.util.log] (main) started o.e.j.s.ServletContextHandler{/,null} 
+[INFO  2016-11-03T19:41:34,992 org.eclipse.jetty.util.log] (main) Started SelectChannelConnector@0.0.0.0:8080 
+[INFO  2016-11-03T19:41:35,944 org.littleshoot.proxy.impl.DefaultHttpProxyServer] (qtp1360215046-22) Starting proxy at address: 0.0.0.0/0.0.0.0:8081 
+[INFO  2016-11-03T19:41:35,969 org.littleshoot.proxy.impl.DefaultHttpProxyServer] (qtp1360215046-22) Proxy listening with TCP transport 
+[INFO  2016-11-03T19:41:36,142 org.littleshoot.proxy.impl.DefaultHttpProxyServer] (qtp1360215046-22) Proxy started at address: /0:0:0:0:0:0:0:0:8081 
Index: getnetwork.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- getnetwork.js	(revision )
+++ getnetwork.js	(revision )
@@ -0,0 +1,9 @@
+var page = require('webpage').create();
+system = require('system');
+var url = system.args[1];
+page.onResourceRequested = function (request) {
+    console.log('Request ' + JSON.stringify(request, undefined, 4));
+    //phantom.exit();
+};
+page.open(url);
+phantom.exit();
\ No newline at end of file
Index: browsermob-proxy-2.1.2/ssl-support/ca-certificate-ec.cer
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- browsermob-proxy-2.1.2/ssl-support/ca-certificate-ec.cer	(revision )
+++ browsermob-proxy-2.1.2/ssl-support/ca-certificate-ec.cer	(revision )
@@ -0,0 +1,13 @@
+-----BEGIN CERTIFICATE-----
+MIIB8jCCAZigAwIBAgIUUridrS1mqPKh8aA7igVOQRUc8P8wCgYIKoZIzj0EAwQw
+RjEZMBcGA1UEAwwQTGl0dGxlUHJveHkgTUlUTTEpMCcGA1UECgwgTGl0dGxlUHJv
+eHkgRUNDIEltcGVyc29uYXRpb24gQ0EwHhcNMTUwMTAyMDAwMDAwWhcNMjUwMTAy
+MDAwMDAwWjBGMRkwFwYDVQQDDBBMaXR0bGVQcm94eSBNSVRNMSkwJwYDVQQKDCBM
+aXR0bGVQcm94eSBFQ0MgSW1wZXJzb25hdGlvbiBDQTBZMBMGByqGSM49AgEGCCqG
+SM49AwEHA0IABB9DdlM/uhkMWTYFo9ETzPrMWBlfhCD0z3J2F1aH9a3OPiPYBio6
+fzTVSZO2rU9ItfcRRpCGeMzY+pilfUNkPXyjZDBiMB0GA1UdDgQWBBQ0TT/oOVF2
+mT10+X9W3NDESql7ZzAPBgNVHRMBAf8EBTADAQH/MAsGA1UdDwQEAwIBtjAjBgNV
+HSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwCgYIKoZIzj0EAwQDSAAw
+RQIhAOb/s6H8v1XeEPGEmMdVEhRnhJgTYAktQKQLZid8QBzsAiA7zc1mFLRAKs98
+5d9+qGFsv7Fy0yTNO3vFyL7DL2mykg==
+-----END CERTIFICATE-----
Index: server.log
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- server.log	(revision )
+++ server.log	(revision )
@@ -0,0 +1,8 @@
+Running BrowserMob Proxy using LittleProxy implementation. To revert to the legacy implementation, run the proxy with the command-line option '--use-littleproxy false'.
+[INFO  2016-11-03T19:41:34,747 net.lightbody.bmp.proxy.Main] (main) Starting BrowserMob Proxy version 2.1.2 
+[INFO  2016-11-03T19:41:34,776 org.eclipse.jetty.util.log] (main) jetty-7.x.y-SNAPSHOT 
+[INFO  2016-11-03T19:41:34,869 org.eclipse.jetty.util.log] (main) started o.e.j.s.ServletContextHandler{/,null} 
+[INFO  2016-11-03T19:41:34,992 org.eclipse.jetty.util.log] (main) Started SelectChannelConnector@0.0.0.0:8080 
+[INFO  2016-11-03T19:41:35,944 org.littleshoot.proxy.impl.DefaultHttpProxyServer] (qtp1360215046-22) Starting proxy at address: 0.0.0.0/0.0.0.0:8081 
+[INFO  2016-11-03T19:41:35,969 org.littleshoot.proxy.impl.DefaultHttpProxyServer] (qtp1360215046-22) Proxy listening with TCP transport 
+[INFO  2016-11-03T19:41:36,142 org.littleshoot.proxy.impl.DefaultHttpProxyServer] (qtp1360215046-22) Proxy started at address: /0:0:0:0:0:0:0:0:8081 
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision )
+++ .idea/misc.xml	(revision )
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectLevelVcsManager" settingsEditedManually="false">
+    <OptionsSetting value="true" id="Add" />
+    <OptionsSetting value="true" id="Remove" />
+    <OptionsSetting value="true" id="Checkout" />
+    <OptionsSetting value="true" id="Update" />
+    <OptionsSetting value="true" id="Status" />
+    <OptionsSetting value="true" id="Edit" />
+    <ConfirmationsSetting value="0" id="Add" />
+    <ConfirmationsSetting value="0" id="Remove" />
+  </component>
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 2.7.10 (D:\python\python27\python.exe)" project-jdk-type="Python SDK" />
+</project>
\ No newline at end of file
Index: browsermob-proxy-2.1.2/README.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- browsermob-proxy-2.1.2/README.txt	(revision )
+++ browsermob-proxy-2.1.2/README.txt	(revision )
@@ -0,0 +1,3 @@
+Please see README.md (in Markdown format) or view it at:
+
+https://github.com/lightbody/browsermob-proxy
\ No newline at end of file
Index: browsermob-proxy-2.1.2/bin/browsermob-proxy
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- browsermob-proxy-2.1.2/bin/browsermob-proxy	(revision )
+++ browsermob-proxy-2.1.2/bin/browsermob-proxy	(revision )
@@ -0,0 +1,100 @@
+#!/bin/sh
+# ----------------------------------------------------------------------------
+#  Copyright 2001-2006 The Apache Software Foundation.
+#
+#  Licensed under the Apache License, Version 2.0 (the "License");
+#  you may not use this file except in compliance with the License.
+#  You may obtain a copy of the License at
+#
+#       http://www.apache.org/licenses/LICENSE-2.0
+#
+#  Unless required by applicable law or agreed to in writing, software
+#  distributed under the License is distributed on an "AS IS" BASIS,
+#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+#  See the License for the specific language governing permissions and
+#  limitations under the License.
+# ----------------------------------------------------------------------------
+
+#   Copyright (c) 2001-2002 The Apache Software Foundation.  All rights
+#   reserved.
+
+BASEDIR=`dirname $0`/..
+BASEDIR=`(cd "$BASEDIR"; pwd)`
+
+
+
+# OS specific support.  $var _must_ be set to either true or false.
+cygwin=false;
+darwin=false;
+case "`uname`" in
+  CYGWIN*) cygwin=true ;;
+  Darwin*) darwin=true
+           if [ -z "$JAVA_VERSION" ] ; then
+             JAVA_VERSION="CurrentJDK"
+           else
+             echo "Using Java version: $JAVA_VERSION"
+           fi
+           if [ -z "$JAVA_HOME" ] ; then
+             JAVA_HOME=/System/Library/Frameworks/JavaVM.framework/Versions/${JAVA_VERSION}/Home
+           fi
+           ;;
+esac
+
+if [ -z "$JAVA_HOME" ] ; then
+  if [ -r /etc/gentoo-release ] ; then
+    JAVA_HOME=`java-config --jre-home`
+  fi
+fi
+
+# For Cygwin, ensure paths are in UNIX format before anything is touched
+if $cygwin ; then
+  [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
+  [ -n "$CLASSPATH" ] && CLASSPATH=`cygpath --path --unix "$CLASSPATH"`
+fi
+
+# If a specific java binary isn't specified search for the standard 'java' binary
+if [ -z "$JAVACMD" ] ; then
+  if [ -n "$JAVA_HOME"  ] ; then
+    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
+      # IBM's JDK on AIX uses strange locations for the executables
+      JAVACMD="$JAVA_HOME/jre/sh/java"
+    else
+      JAVACMD="$JAVA_HOME/bin/java"
+    fi
+  else
+    JAVACMD=`which java`
+  fi
+fi
+
+if [ ! -x "$JAVACMD" ] ; then
+  echo "Error: JAVA_HOME is not defined correctly."
+  echo "  We cannot execute $JAVACMD"
+  exit 1
+fi
+
+if [ -z "$REPO" ]
+then
+  REPO="$BASEDIR"/lib
+fi
+
+CLASSPATH=$CLASSPATH_PREFIX:"$BASEDIR"/etc:"$REPO"/*
+EXTRA_JVM_ARGUMENTS=""
+
+# For Cygwin, switch paths to Windows format before running java
+if $cygwin; then
+  [ -n "$CLASSPATH" ] && CLASSPATH=`cygpath --path --windows "$CLASSPATH"`
+  [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --path --windows "$JAVA_HOME"`
+  [ -n "$HOME" ] && HOME=`cygpath --path --windows "$HOME"`
+  [ -n "$BASEDIR" ] && BASEDIR=`cygpath --path --windows "$BASEDIR"`
+  [ -n "$REPO" ] && REPO=`cygpath --path --windows "$REPO"`
+fi
+
+exec "$JAVACMD" $JAVA_OPTS \
+  $EXTRA_JVM_ARGUMENTS \
+  -classpath "$CLASSPATH" \
+  -Dapp.name="browsermob-proxy" \
+  -Dapp.pid="$$" \
+  -Dapp.repo="$REPO" \
+  -Dbasedir="$BASEDIR" \
+  net.lightbody.bmp.proxy.Main \
+  "$@"
Index: browsermob-proxy-2.1.2/bin/browsermob-proxy.bat
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- browsermob-proxy-2.1.2/bin/browsermob-proxy.bat	(revision )
+++ browsermob-proxy-2.1.2/bin/browsermob-proxy.bat	(revision )
@@ -0,0 +1,105 @@
+@REM ----------------------------------------------------------------------------
+@REM Copyright 2001-2004 The Apache Software Foundation.
+@REM
+@REM Licensed under the Apache License, Version 2.0 (the "License");
+@REM you may not use this file except in compliance with the License.
+@REM You may obtain a copy of the License at
+@REM
+@REM      http://www.apache.org/licenses/LICENSE-2.0
+@REM
+@REM Unless required by applicable law or agreed to in writing, software
+@REM distributed under the License is distributed on an "AS IS" BASIS,
+@REM WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+@REM See the License for the specific language governing permissions and
+@REM limitations under the License.
+@REM ----------------------------------------------------------------------------
+@REM
+
+@echo off
+
+set ERROR_CODE=0
+
+:init
+@REM Decide how to startup depending on the version of windows
+
+@REM -- Win98ME
+if NOT "%OS%"=="Windows_NT" goto Win9xArg
+
+@REM set local scope for the variables with windows NT shell
+if "%OS%"=="Windows_NT" @setlocal
+
+@REM -- 4NT shell
+if "%eval[2+2]" == "4" goto 4NTArgs
+
+@REM -- Regular WinNT shell
+set CMD_LINE_ARGS=%*
+goto WinNTGetScriptDir
+
+@REM The 4NT Shell from jp software
+:4NTArgs
+set CMD_LINE_ARGS=%$
+goto WinNTGetScriptDir
+
+:Win9xArg
+@REM Slurp the command line arguments.  This loop allows for an unlimited number
+@REM of arguments (up to the command line limit, anyway).
+set CMD_LINE_ARGS=
+:Win9xApp
+if %1a==a goto Win9xGetScriptDir
+set CMD_LINE_ARGS=%CMD_LINE_ARGS% %1
+shift
+goto Win9xApp
+
+:Win9xGetScriptDir
+set SAVEDIR=%CD%
+%0\
+cd %0\..\.. 
+set BASEDIR=%CD%
+cd %SAVEDIR%
+set SAVE_DIR=
+goto repoSetup
+
+:WinNTGetScriptDir
+set BASEDIR=%~dp0\..
+
+:repoSetup
+
+
+if "%JAVACMD%"=="" set JAVACMD=java
+
+if "%REPO%"=="" set REPO=%BASEDIR%\lib
+
+set CLASSPATH="%BASEDIR%"\etc;"%REPO%"\*
+set EXTRA_JVM_ARGUMENTS=
+goto endInit
+
+@REM Reaching here means variables are defined and arguments have been captured
+:endInit
+
+%JAVACMD% %JAVA_OPTS% %EXTRA_JVM_ARGUMENTS% -classpath %CLASSPATH_PREFIX%;%CLASSPATH% -Dapp.name="browsermob-proxy" -Dapp.repo="%REPO%" -Dbasedir="%BASEDIR%" net.lightbody.bmp.proxy.Main %CMD_LINE_ARGS%
+if ERRORLEVEL 1 goto error
+goto end
+
+:error
+if "%OS%"=="Windows_NT" @endlocal
+set ERROR_CODE=1
+
+:end
+@REM set local scope for the variables with windows NT shell
+if "%OS%"=="Windows_NT" goto endNT
+
+@REM For old DOS remove the set variables from ENV - we assume they were not set
+@REM before we started - at least we don't leave any baggage around
+set CMD_LINE_ARGS=
+goto postExec
+
+:endNT
+@endlocal
+
+:postExec
+
+if "%FORCE_EXIT_ON_ERROR%" == "on" (
+  if %ERROR_CODE% NEQ 0 exit %ERROR_CODE%
+)
+
+exit /B %ERROR_CODE%
Index: webbrowser.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- webbrowser.py	(revision )
+++ webbrowser.py	(revision )
@@ -0,0 +1,68 @@
+import socket
+
+import psutil
+from browsermobproxy import Server
+from selenium import webdriver
+
+
+class webbrowser:
+    def __init__(self, path, url, cookie):
+        socket.setdefaulttimeout(10)
+        self.url = url
+        self.cookie = cookie
+        self.path = path
+        self.server = Server('browsermob-proxy-2.1.2\\bin\\browsermob-proxy')
+        self.server.start()
+        self.proxy = self.server.create_proxy()
+        cap = webdriver.DesiredCapabilities.PHANTOMJS
+        cap["phantomjs.page.settings.resourceTimeout"] = 2000
+        cap["phantomjs.page.settings.loadImages"] = False
+        cap["phantomjs.page.settings.localToRemoteUrlAccessEnabled"] = True
+        cap["phantomjs.page.settings.userAgent"] = (
+            "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36")
+        service_args = ["--proxy=%s" % self.proxy.proxy, '--ignore-ssl-errors=yes']
+        self.driver = webdriver.PhantomJS(service_args=service_args, desired_capabilities=cap)
+        self.proxy.new_har(options={'captureContent': True})
+        self.driver.get('http://192.168.0.107/xssting/get.html')
+        if self.cookie != None:
+            for i in self.cookie.split(';'):
+                self.driver.execute_script("document.cookie = \"%s\"" % i)
+
+    def gethtml(self, url):
+        self.driver.get(url)
+        return self.driver.page_source
+
+    def get_network(self):
+        all_requests = [entry['request']['url'] for entry in self.proxy.har['log']['entries'] if
+                        entry['request']['method'] == 'GET' and entry['response']['status'] == 200]
+        for i in self.proxy.har['log']['entries']:
+            if i['request']['method'] == 'POST' and entry['response']['status'] == 200:
+                postdata = []
+                for j in i['request']['postData']['params']:
+                    postdata.append(j['name'] + '=' + j['value'])
+                data = "&".join(postdata)
+                all_requests.append(i['request']['url'] + '||post||' + data)
+        print list(set(all_requests))
+
+    def close(self):
+        self.driver.quit()
+        for process in psutil.process_iter():
+            try:
+                process_info = process.as_dict(attrs=['name', 'cmdline'])
+                if process_info.get('name') in ('java', 'java.exe'):
+                    for cmd_info in process_info.get('cmdline'):
+                        if cmd_info == '-Dapp.name=browsermob-proxy':
+                            process.kill()
+            except psutil.NoSuchProcess:
+                pass
+
+
+if __name__ == '__main__':
+    p = webbrowser('result/www.tencent.com/', 'http://www.tencent.com/dasdasdas/', 'aaaaa')
+    list_url = ['http://www.tencent.com/zh-cn/', 'http://www.tencent.com/zh-cn/ps/ieg.shtml',
+                'http://www.tencent.com/zh-cn/ps/ieg.shtml', 'http://www.tencent.com/zh-cn/ir/news/', \
+                'http://www.tencent.com/zh-cn/ir/govern.shtml', ' https://www.baidu.com']
+    for i in list_url:
+        p.gethtml(i)
+    p.get_network()
+    p.close()
Index: ghostdriver.log
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ghostdriver.log	(revision )
+++ ghostdriver.log	(revision )
@@ -0,0 +1,1 @@
+
\ No newline at end of file
Index: browsermob-proxy-2.1.2/LICENSE.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- browsermob-proxy-2.1.2/LICENSE.txt	(revision )
+++ browsermob-proxy-2.1.2/LICENSE.txt	(revision )
@@ -0,0 +1,203 @@
+
+                                 Apache License
+                           Version 2.0, January 2004
+                        http://www.apache.org/licenses/
+
+   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
+
+   1. Definitions.
+
+      "License" shall mean the terms and conditions for use, reproduction,
+      and distribution as defined by Sections 1 through 9 of this document.
+
+      "Licensor" shall mean the copyright owner or entity authorized by
+      the copyright owner that is granting the License.
+
+      "Legal Entity" shall mean the union of the acting entity and all
+      other entities that control, are controlled by, or are under common
+      control with that entity. For the purposes of this definition,
+      "control" means (i) the power, direct or indirect, to cause the
+      direction or management of such entity, whether by contract or
+      otherwise, or (ii) ownership of fifty percent (50%) or more of the
+      outstanding shares, or (iii) beneficial ownership of such entity.
+
+      "You" (or "Your") shall mean an individual or Legal Entity
+      exercising permissions granted by this License.
+
+      "Source" form shall mean the preferred form for making modifications,
+      including but not limited to software source code, documentation
+      source, and configuration files.
+
+      "Object" form shall mean any form resulting from mechanical
+      transformation or translation of a Source form, including but
+      not limited to compiled object code, generated documentation,
+      and conversions to other media types.
+
+      "Work" shall mean the work of authorship, whether in Source or
+      Object form, made available under the License, as indicated by a
+      copyright notice that is included in or attached to the work
+      (an example is provided in the Appendix below).
+
+      "Derivative Works" shall mean any work, whether in Source or Object
+      form, that is based on (or derived from) the Work and for which the
+      editorial revisions, annotations, elaborations, or other modifications
+      represent, as a whole, an original work of authorship. For the purposes
+      of this License, Derivative Works shall not include works that remain
+      separable from, or merely link (or bind by name) to the interfaces of,
+      the Work and Derivative Works thereof.
+
+      "Contribution" shall mean any work of authorship, including
+      the original version of the Work and any modifications or additions
+      to that Work or Derivative Works thereof, that is intentionally
+      submitted to Licensor for inclusion in the Work by the copyright owner
+      or by an individual or Legal Entity authorized to submit on behalf of
+      the copyright owner. For the purposes of this definition, "submitted"
+      means any form of electronic, verbal, or written communication sent
+      to the Licensor or its representatives, including but not limited to
+      communication on electronic mailing lists, source code control systems,
+      and issue tracking systems that are managed by, or on behalf of, the
+      Licensor for the purpose of discussing and improving the Work, but
+      excluding communication that is conspicuously marked or otherwise
+      designated in writing by the copyright owner as "Not a Contribution."
+
+      "Contributor" shall mean Licensor and any individual or Legal Entity
+      on behalf of whom a Contribution has been received by Licensor and
+      subsequently incorporated within the Work.
+
+   2. Grant of Copyright License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      copyright license to reproduce, prepare Derivative Works of,
+      publicly display, publicly perform, sublicense, and distribute the
+      Work and such Derivative Works in Source or Object form.
+
+   3. Grant of Patent License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      (except as stated in this section) patent license to make, have made,
+      use, offer to sell, sell, import, and otherwise transfer the Work,
+      where such license applies only to those patent claims licensable
+      by such Contributor that are necessarily infringed by their
+      Contribution(s) alone or by combination of their Contribution(s)
+      with the Work to which such Contribution(s) was submitted. If You
+      institute patent litigation against any entity (including a
+      cross-claim or counterclaim in a lawsuit) alleging that the Work
+      or a Contribution incorporated within the Work constitutes direct
+      or contributory patent infringement, then any patent licenses
+      granted to You under this License for that Work shall terminate
+      as of the date such litigation is filed.
+
+   4. Redistribution. You may reproduce and distribute copies of the
+      Work or Derivative Works thereof in any medium, with or without
+      modifications, and in Source or Object form, provided that You
+      meet the following conditions:
+
+      (a) You must give any other recipients of the Work or
+          Derivative Works a copy of this License; and
+
+      (b) You must cause any modified files to carry prominent notices
+          stating that You changed the files; and
+
+      (c) You must retain, in the Source form of any Derivative Works
+          that You distribute, all copyright, patent, trademark, and
+          attribution notices from the Source form of the Work,
+          excluding those notices that do not pertain to any part of
+          the Derivative Works; and
+
+      (d) If the Work includes a "NOTICE" text file as part of its
+          distribution, then any Derivative Works that You distribute must
+          include a readable copy of the attribution notices contained
+          within such NOTICE file, excluding those notices that do not
+          pertain to any part of the Derivative Works, in at least one
+          of the following places: within a NOTICE text file distributed
+          as part of the Derivative Works; within the Source form or
+          documentation, if provided along with the Derivative Works; or,
+          within a display generated by the Derivative Works, if and
+          wherever such third-party notices normally appear. The contents
+          of the NOTICE file are for informational purposes only and
+          do not modify the License. You may add Your own attribution
+          notices within Derivative Works that You distribute, alongside
+          or as an addendum to the NOTICE text from the Work, provided
+          that such additional attribution notices cannot be construed
+          as modifying the License.
+
+      You may add Your own copyright statement to Your modifications and
+      may provide additional or different license terms and conditions
+      for use, reproduction, or distribution of Your modifications, or
+      for any such Derivative Works as a whole, provided Your use,
+      reproduction, and distribution of the Work otherwise complies with
+      the conditions stated in this License.
+
+   5. Submission of Contributions. Unless You explicitly state otherwise,
+      any Contribution intentionally submitted for inclusion in the Work
+      by You to the Licensor shall be under the terms and conditions of
+      this License, without any additional terms or conditions.
+      Notwithstanding the above, nothing herein shall supersede or modify
+      the terms of any separate license agreement you may have executed
+      with Licensor regarding such Contributions.
+
+   6. Trademarks. This License does not grant permission to use the trade
+      names, trademarks, service marks, or product names of the Licensor,
+      except as required for reasonable and customary use in describing the
+      origin of the Work and reproducing the content of the NOTICE file.
+
+   7. Disclaimer of Warranty. Unless required by applicable law or
+      agreed to in writing, Licensor provides the Work (and each
+      Contributor provides its Contributions) on an "AS IS" BASIS,
+      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
+      implied, including, without limitation, any warranties or conditions
+      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
+      PARTICULAR PURPOSE. You are solely responsible for determining the
+      appropriateness of using or redistributing the Work and assume any
+      risks associated with Your exercise of permissions under this License.
+
+   8. Limitation of Liability. In no event and under no legal theory,
+      whether in tort (including negligence), contract, or otherwise,
+      unless required by applicable law (such as deliberate and grossly
+      negligent acts) or agreed to in writing, shall any Contributor be
+      liable to You for damages, including any direct, indirect, special,
+      incidental, or consequential damages of any character arising as a
+      result of this License or out of the use or inability to use the
+      Work (including but not limited to damages for loss of goodwill,
+      work stoppage, computer failure or malfunction, or any and all
+      other commercial damages or losses), even if such Contributor
+      has been advised of the possibility of such damages.
+
+   9. Accepting Warranty or Additional Liability. While redistributing
+      the Work or Derivative Works thereof, You may choose to offer,
+      and charge a fee for, acceptance of support, warranty, indemnity,
+      or other liability obligations and/or rights consistent with this
+      License. However, in accepting such obligations, You may act only
+      on Your own behalf and on Your sole responsibility, not on behalf
+      of any other Contributor, and only if You agree to indemnify,
+      defend, and hold each Contributor harmless for any liability
+      incurred by, or claims asserted against, such Contributor by reason
+      of your accepting any such warranty or additional liability.
+
+   END OF TERMS AND CONDITIONS
+
+   APPENDIX: How to apply the Apache License to your work.
+
+      To apply the Apache License to your work, attach the following
+      boilerplate notice, with the fields enclosed by brackets "[]"
+      replaced with your own identifying information. (Don't include
+      the brackets!)  The text should be enclosed in the appropriate
+      comment syntax for the file format. We also recommend that a
+      file or class name and description of purpose be included on the
+      same "printed page" as the copyright notice for easier
+      identification within third-party archives.
+
+   Copyright [yyyy] [name of copyright owner]
+
+   Licensed under the Apache License, Version 2.0 (the "License");
+   you may not use this file except in compliance with the License.
+   You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
+
Index: browsermob-proxy-2.1.2/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- browsermob-proxy-2.1.2/README.md	(revision )
+++ browsermob-proxy-2.1.2/README.md	(revision )
@@ -0,0 +1,415 @@
+# BrowserMob Proxy
+
+BrowserMob Proxy allows you to manipulate HTTP requests and responses, capture HTTP content, and export performance data as a [HAR file](http://www.softwareishard.com/blog/har-12-spec/).
+BMP works well as a standalone proxy server, but it is especially useful when embedded in Selenium tests.
+
+The latest version of BrowserMob Proxy is 2.1.1, powered by [LittleProxy](https://github.com/adamfisk/LittleProxy).
+
+If you're running BrowserMob Proxy within a Java application or Selenium test, get started with [Embedded Mode](#getting-started-embedded-mode). If you want to run BMP from the
+command line as a standalone proxy, start with [Standalone](#getting-started-standalone).
+
+### Getting started: Embedded Mode
+To use BrowserMob Proxy in your tests or application, add the `browsermob-core` dependency to your pom:
+```xml
+    <dependency>
+        <groupId>net.lightbody.bmp</groupId>
+        <artifactId>browsermob-core</artifactId>
+        <version>2.1.1</version>
+        <scope>test</scope>
+    </dependency>
+```
+
+Start the proxy:
+```java
+    BrowserMobProxy proxy = new BrowserMobProxyServer();
+    proxy.start(0);
+    int port = proxy.getPort(); // get the JVM-assigned port
+    // Selenium or HTTP client configuration goes here
+```
+
+Then configure your HTTP client to use a proxy running at the specified port.
+
+**Using with Selenium?** See the [Using with Selenium](#using-with-selenium) section.
+
+### Getting started: Standalone
+To run in standalone mode from the command line, first download the latest release from the [releases page](https://github.com/lightbody/browsermob-proxy/releases), or [build the latest from source](#building-the-latest-from-source).
+
+Start the REST API:
+```sh
+    ./browsermob-proxy -port 8080
+```
+
+Then create a proxy server instance:
+```sh
+    curl -X POST http://localhost:8080/proxy
+    {"port":8081}
+```
+
+The "port" is the port of the newly-created proxy instance, so configure your HTTP client or web browser to use a proxy on the returned port.
+For more information on the features available in the REST API, see [the REST API documentation](#rest-api).
+
+## Changes since the 2.1-beta series
+
+**The `browsermob-core-littleproxy` module is now `browsermob-core`**
+
+After six beta releases, the LittleProxy implementation now supports more features and is more stable than the legacy implementation. To reflect that level of maturity and long-term support, the `browsermob-core` module now uses LittleProxy by default.
+
+**Note about Legacy support**: In the 2.1-betas, if you were using the `ProxyServer` or `LegacyProxyServer` classes, use the `browsermob-core-legacy` module in 2.1.0 and higher.
+
+*LittleProxy support for `LegacyProxyServer` has moved to `BrowserMobProxyServerLegacyAdapter`*. Using the LittleProxy implementation with the `LegacyProxyServer` interface is still fully supported as a means to help you transition from 2.0.0. Unlike the 2.1-beta series, the `BrowserMobProxyServer` class
+no longer implements `LegacyProxyServer`; however, the `BrowserMobProxyServerLegacyAdapter` can be used to integrate legacy code with the new LittleProxy interface. You must still use the `browsermob-core-legacy` module when using the LegacyAdapter.
+
+```java
+   LegacyProxyServer proxy = new BrowserMobProxyServerLegacyAdapter();
+   proxy.setPort(8081); // method only supported by the legacy interface
+   proxy.start();
+```
+
+## Changes since 2.0.0
+
+The new [BrowserMobProxyServer class](browsermob-core/src/main/java/net/lightbody/bmp/BrowserMobProxyServer.java) has replaced the legacy ProxyServer implementation. The legacy implementation is no longer actively supported; all new code should use `BrowserMobProxyServer`. We highly recommend that existing code migrate to the new implementation.
+
+The most important changes from 2.0 are:
+
+- [Separate REST API and Embedded Mode modules](#embedded-mode). Include only the functionality you need.
+- [New BrowserMobProxy interface](browsermob-core/src/main/java/net/lightbody/bmp/BrowserMobProxy.java). The new interface will completely replace the legacy 2.0 ProxyServer contract in version 3.0 and higher.
+- [LittleProxy support](#littleproxy-support). More stable and more powerful than the legacy Jetty back-end.
+
+### New BrowserMobProxy API
+
+BrowserMob Proxy 2.1 includes a [new BrowserMobProxy interface](browsermob-core/src/main/java/net/lightbody/bmp/BrowserMobProxy.java) to interact with BrowserMob Proxy programmatically. The new interface defines the functionality that BrowserMob Proxy will support in future releases (including 3.0+). To ease migration, both the legacy (Jetty-based) ProxyServer class and the new, LittleProxy-powered BrowserMobProxy class support the new BrowserMobProxy interface.
+
+We _highly_ recommend migrating existing code to the BrowserMobProxy interface using the `BrowserMobProxyServer` class.
+
+### Using the LittleProxy implementation with 2.0.0 code
+
+The legacy interface, implicitly defined by the ProxyServer class, has been extracted into `net.lightbody.bmp.proxy.LegacyProxyServer` and is now officially deprecated. The new LittleProxy-based implementation will implement LegacyProxyServer for all 2.1.x releases. This means you can switch to the LittleProxy-powered implementation with minimal change to existing code ([with the exception of interceptors](#http-request-manipulation)):
+
+```java
+    // With the Jetty-based 2.0.0 release, BMP was created like this:
+    ProxyServer proxyServer = new ProxyServer();
+    proxyServer.start();
+    // [...]
+
+    // To use the LittleProxy-powered 2.1.1 release, simply change to
+    // the LegacyProxyServer interface and the adapter for the new
+    // LittleProxy-based implementation:
+    LegacyProxyServer proxyServer = new BrowserMobProxyServerLegacyAdapter();
+    proxyServer.start();
+    // Almost all deprecated 2.0.0 methods are supported by the 
+    // new BrowserMobProxyServerLegacyAdapter implementation, so in most cases,
+    // no further code changes are necessary
+```
+
+LegacyProxyServer will not be supported after 3.0 is released, so we recommend migrating to the `BrowserMobProxy` interface as soon as possible. The new interface provides additional functionality and is compatible with both the legacy Jetty-based ProxyServer implementation [(with some exceptions)](new-interface-compatibility.md) and the new LittleProxy implementation.
+
+If you must continue using the legacy Jetty-based implementation, include the `browsermob-core-legacy` artifact instead of `browsermob-core`.
+
+## Features and Usage
+
+The proxy is programmatically controlled via a REST interface or by being embedded directly inside Java-based programs and unit tests. It captures performance data in the [HAR format](http://groups.google.com/group/http-archive-specification). In addition it can actually control HTTP traffic, such as:
+
+ - blacklisting and whitelisting certain URL patterns
+ - simulating various bandwidth and latency
+ - remapping DNS lookups
+ - flushing DNS caching
+ - controlling DNS and request timeouts
+ - automatic BASIC authorization
+
+### REST API
+
+**New in 2.1:** The REST API now supports LittleProxy. As of 2.1.0-beta-3, LittleProxy is the default implementation. (You may specify `--use-littleproxy false` to disable LittleProxy in favor of the legacy Jetty 5-based implementation.)
+
+To get started, first start the proxy by running `browsermob-proxy` or `browsermob-proxy.bat` in the bin directory:
+
+    $ sh browsermob-proxy -port 8080
+    INFO 05/31 03:12:48 o.b.p.Main           - Starting up...
+    2011-05-30 20:12:49.517:INFO::jetty-7.3.0.v20110203
+    2011-05-30 20:12:49.689:INFO::started o.e.j.s.ServletContextHandler{/,null}
+    2011-05-30 20:12:49.820:INFO::Started SelectChannelConnector@0.0.0.0:8080
+
+Once started, there won't be an actual proxy running until you create a new proxy. You can do this by POSTing to /proxy:
+
+    [~]$ curl -X POST http://localhost:8080/proxy
+    {"port":8081}
+
+or optionally specify your own port:
+
+    [~]$ curl -X POST -d 'port=8089' http://localhost:8080/proxy
+    {"port":8089}
+
+or if running BrowserMob Proxy in a multi-homed environment, specify a desired bind address (default is `0.0.0.0`):
+
+    [~]$ curl -X POST -d 'bindAddress=192.168.1.222' http://localhost:8080/proxy
+    {"port":8086}
+
+Once that is done, a new proxy will be available on the port returned. All you have to do is point a browser to that proxy on that port and you should be able to browse the internet. The following additional APIs will then be available:
+
+Description |  HTTP method | Request path | Request parameters
+--- | :---: | :---: | ---
+Get a list of ports attached to `ProxyServer` instances managed by `ProxyManager` | GET | */proxy* || 
+<a name="harcreate">Creates a new HAR</a> attached to the proxy and returns the HAR content if there was a previous HAR. *[port]* in request path it is port where your proxy was started | PUT |*/proxy/[port]/har* |<p>*captureHeaders* - Boolean, capture headers or not. Optional, default to "false".</p><p>*captureContent* - Boolean, capture content bodies or not. Optional, default to "false".</p><p>*captureBinaryContent* - Boolean, capture binary content or not. Optional, default to "false".</p><p>*initialPageRef* - The string name of The first page ref that should be used in the HAR. Optional, default to "Page 1".</p><p>*initialPageTitle* - The title of first HAR page. Optional, default to *initialPageRef*.</p>
+Starts a new page on the existing HAR. *[port]* in request path it is port where your proxy was started | PUT | */proxy/[port]/har/pageRef* |<p>*pageRef* - The string name of the first page ref that should be used in the HAR. Optional, default to "Page N" where N is the next page number.</p><p>*pageTitle* - The title of new HAR page. Optional, default to `pageRef`.</p>
+Shuts down the proxy and closes the port. *[port]* in request path it is port where your proxy was started | DELETE | */proxy/[port]* ||
+Returns the JSON/HAR content representing all the HTTP traffic passed through the proxy (provided you have already created the HAR with [this method](#harcreate)) | GET | */proxy/[port]/har* ||
+Displays whitelisted items | GET | */proxy/[port]/whitelist* ||
+Sets a list of URL patterns to whitelist | PUT | */proxy/[port]/whitelist* |<p>*regex* - A comma separated list of regular expressions.</p><p>*status* - The HTTP status code to return for URLs that do not match the whitelist.</p>|
+Clears all URL patterns from the whitelist  | DELETE | */proxy/[port]/whitelist* ||
+Displays blacklisted items | GET | */proxy/[port]/blacklist* ||
+Set a URL to blacklist | PUT | */proxy/[port]/blacklist* |<p>*regex* - The blacklist regular expression.</p><p>*status* - The HTTP status code to return for URLs that are blacklisted.</p><p>*method* - The regular expression for matching HTTP method (GET, POST, PUT, etc). Optional, by default processing all HTTP method.</p>|
+Clears all URL patterns from the blacklist | DELETE | */proxy/[port]/blacklist* ||
+Limit the bandwidth through the proxy on the *[port]* | PUT | */proxy/[port]/limit* |<p>*downstreamKbps* - Sets the downstream bandwidth limit in kbps. Optional.</p><p>*upstreamKbps* - Sets the upstream bandwidth limit kbps. Optional, by default unlimited.</p><p>*downstreamMaxKB* - Specifies how many kilobytes in total the client is allowed to download through the proxy. Optional, by default unlimited.</p><p>*upstreamMaxKB* - Specifies how many kilobytes in total the client is allowed to upload through the proxy. Optional, by default unlimited.</p><p>*latency* - Add the given latency to each HTTP request. Optional, by default all requests are invoked without latency.</p><p>*enable* - A boolean that enable bandwidth limiter. Optional, by default to "false", but setting any of the properties above will implicitly enable throttling</p><p>*payloadPercentage* - Specifying what percentage of data sent is payload, e.g. use this to take into account overhead due to tcp/ip. Optional.</p><p>*maxBitsPerSecond* - The max bits per seconds you want this instance of StreamManager to respect. Optional.</p>
+Displays the amount of data remaining to be uploaded/downloaded until the limit is reached | GET | */proxy/[port]/limit* ||
+Set and override HTTP Request headers | POST | */proxy/[port]/headers* | Payload data should be **JSON** encoded set of headers. Where key is a header name (such as "User-Agent") and  value is a value of HTTP header to setup (such as "BrowserMob-Agent"). Example: `{"User-Agent": "BrowserMob-Agent"}`|
+Overrides normal DNS lookups and remaps the given hosts with the associated IP address | POST | */proxy/[port]/hosts* | Payload data should be **JSON** encoded set of hosts. Where key is a host name (such as "example.com") and value is a IP address which associatied with host hame (such as "1.2.3.4"'). Example: `{"example.com": "1.2.3.4"}`|
+Sets automatic basic authentication for the specified domain | POST | */proxy/[port]/auth/basic/[domain]* | Payload data should be **JSON** encoded username and password name/value pairs. Example: `{"username": "myUsername", "password": "myPassword"}`|
+Wait till all request are being made | PUT | */proxy/[port]/wait* |<p>*quietPeriodInMs* - Wait till all request are being made. Optional.</p><p>*timeoutInMs* - Sets quiet period in milliseconds. Optional.</p>|
+Handles different proxy timeouts | PUT | *proxy/[port]/timeout* |<p>Payload data should be **JSON** encoded set of parameters. Where key is a parameters name (such as "connectionTimeout") and  value is a value of parameter to setup (such as "500")</p><p>*requestTimeout* - Request timeout in milliseconds. A timeout value of -1 is interpreted as infinite timeout. Optional, default to "-1".</p><p>*readTimeout* - Read timeout in milliseconds. Which is the timeout for waiting for data or, put differently, a maximum period inactivity between two consecutive data packets). A timeout value of zero is interpreted as an infinite timeout. Optional, default to "60000".</p><p>*connectionTimeout* - Determines the timeout in milliseconds until a connection is established. A timeout value of zero is interpreted as an infinite timeout. Optional, default to "60000".</p><p>*dnsCacheTimeout* - Sets the maximum length of time that records will be stored in this Cache. A nonpositive value disables this feature (that is, sets no limit). Optional, default to "0".</p>Example: `{"connectionTimeout" : "500", "readTimeout" : "200"}`|
+Redirecting URL's | PUT | */proxy/[port]/rewrite* |<p>*matchRegex* - A matching URL regular expression.</p><p>*replace* - replacement URL.</p>|
+Removes all URL redirection rules currently in effect | DELETE | */proxy/[port]/rewrite* ||
+Setting the retry count | PUT | */proxy/[port]/retry* |<p>*retrycount* - The number of times a method will be retried.</p>|
+Empties the DNS cache | DELETE | */proxy/[port]/dns/cache* ||
+| [REST API interceptors with LittleProxy](#interceptorsRESTapiLP) |||
+|Describe your own request interception | POST | */proxy/[port]/filter/request* | A string wich determinates interceptor rules. See more [here](#interceptorsRESTapiLPRequestFilter) |
+|Describe your own response interception | POST | */proxy/[port]/filter/response* | A string wich determinates interceptor rules. See more [here](#interceptorsRESTapiLPResponseFilter) |
+| [REST API with Legacy interceptors](#interceptorsRESTapiLegacy) ||||
+|Describe your own request interception | POST | */proxy/[port]/interceptor/request* | A string wich determinates interceptor rules. See more [here](#interceptorsRESTapiLegacy) |
+|Describe your own response interception | POST | */proxy/[port]/interceptor/response* | A string wich determinates interceptor rules. See more [here](#interceptorsRESTapiLegacy) |
+
+For example, once you've started the proxy you can create a new HAR to start recording data like so:
+
+    [~]$ curl -X PUT -d 'initialPageRef=Foo' http://localhost:8080/proxy/8081/har
+
+Now when traffic goes through port 9091 it will be attached to a page reference named "Foo". Consult the HAR specification for more info on what a "pageRef" is. You can also start a new pageRef like so:
+
+    [~]$ curl -X PUT -d 'pageRef=Bar' http://localhost:8080/proxy/8081/har/pageRef
+
+That will ensure no more HTTP requests get attached to the old pageRef (Foo) and start getting attached to the new pageRef (Bar). After creating the HAR, you can get its content at any time like so:
+
+    [~]$ curl http://localhost:8080/proxy/8081/har
+
+Sometimes you will want to route requests through an upstream proxy server. In this case specify your proxy server by adding the httpProxy parameter to your create proxy request:
+
+    [~]$ curl -X POST http://localhost:8080/proxy?httpProxy=yourproxyserver.com:8080
+    {"port":8081}
+
+Alternatively, you can specify the upstream proxy config for all proxies created using the standard JVM [system properties for HTTP proxies](http://docs.oracle.com/javase/6/docs/technotes/guides/net/proxies.html).
+Note that you can still override the default upstream proxy via the POST payload, but if you omit the payload the JVM
+system properties will be used to specify the upstream proxy.
+
+### Command-line Arguments
+
+ - -port \<port\>
+  - Port on which the API listens. Default value is 8080.
+ - -address <address>
+  - Address to which the API is bound. Default value is 0.0.0.0.
+ - -proxyPortRange \<from\>-\<to\>
+  - Range of ports reserved for proxies. Only applies if *port* parameter is not supplied in the POST request. Default values are \<port\>+1 to \<port\>+500+1.
+ - -ttl \<seconds\>
+  - Proxy will be automatically deleted after a specified time period. Off by default.
+
+### Embedded Mode
+
+**New in 2.1:** New Embedded Mode module
+
+**New in 2.1:** New [BrowserMobProxy interface](#new-browsermobproxy-api) for Embedded Mode
+
+BrowserMob Proxy 2.1 separates the Embedded Mode and REST API into two modules. If you only need Embedded Mode functionality, add the `browsermob-core` artifact as a dependency. The REST API artifact is `browsermob-rest`.
+
+If you're using Java and Selenium, the easiest way to get started is to embed the project directly in your test. First, you'll need to make sure that all the dependencies are imported in to the project. You can find them in the *lib* directory. Or, if you're using Maven, you can add this to your pom:
+```xml
+    <dependency>
+        <groupId>net.lightbody.bmp</groupId>
+        <artifactId>browsermob-core</artifactId>
+        <version>2.1.1</version>
+        <scope>test</scope>
+    </dependency>
+```
+
+Once done, you can start a proxy using `net.lightbody.bmp.BrowserMobProxy`:
+```java
+    BrowserMobProxy proxy = new BrowserMobProxyServer();
+    proxy.start(0);
+    // get the JVM-assigned port and get to work!
+    int port = proxy.getPort();
+    //...
+```
+
+Consult the Javadocs on the `net.lightbody.bmp.BrowserMobProxy` class for the full API.
+
+### Using With Selenium
+
+BrowserMob Proxy makes it easy to use a proxy in Selenium tests:
+```java
+    // start the proxy
+    BrowserMobProxy proxy = new BrowserMobProxyServer();
+    proxy.start(0);
+
+    // get the Selenium proxy object
+    Proxy seleniumProxy = ClientUtil.createSeleniumProxy(proxy);
+
+    // configure it as a desired capability
+    DesiredCapabilities capabilities = new DesiredCapabilities();
+    capabilities.setCapability(CapabilityType.PROXY, seleniumProxy);
+
+    // start the browser up
+    WebDriver driver = new FirefoxDriver(capabilities);
+
+    // enable more detailed HAR capture, if desired (see CaptureType for the complete list)
+    proxy.enableHarCaptureTypes(CaptureType.REQUEST_CONTENT, CaptureType.RESPONSE_CONTENT);
+
+    // create a new HAR with the label "yahoo.com"
+    proxy.newHar("yahoo.com");
+
+    // open yahoo.com
+    driver.get("http://yahoo.com");
+
+    // get the HAR data
+    Har har = proxy.getHar();
+```
+
+**Note**: If you're running running tests on a Selenium grid, you will need to customize the Selenium Proxy object
+created by `createSeleniumProxy()` to point to the hostname of the machine that your test is running on. You can also run a standalone
+BrowserMob Proxy instance on a separate machine and configure the Selenium Proxy object to use that proxy.
+
+### HTTP Request Manipulation
+
+**HTTP request manipulation has changed in 2.1.0+ with LittleProxy.** The LittleProxy-based interceptors are easier to use and more reliable. The legacy ProxyServer implementation **will not** support the new interceptor methods.
+
+#### 2.1.0+ (LittleProxy) interceptors
+
+There are four new methods to support request and response interception in LittleProxy:
+
+  - `addRequestFilter`
+  - `addResponseFilter`
+  - `addFirstHttpFilterFactory`
+  - `addLastHttpFilterFactory`
+
+For most use cases, including inspecting and modifying requests/responses, `addRequestFilter` and `addResponseFilter` will be sufficient. The request and response filters are easy to use:
+```java
+    proxy.addRequestFilter(new RequestFilter() {
+            @Override
+            public HttpResponse filterRequest(HttpRequest request, HttpMessageContents contents, HttpMessageInfo messageInfo) {
+                if (messageInfo.getOriginalUri().endsWith("/some-endpoint-to-intercept")) {
+                    // retrieve the existing message contents as a String or, for binary contents, as a byte[]
+                    String messageContents = contents.getTextContents();
+
+                    // do some manipulation of the contents
+                    String newContents = messageContents.replaceAll("original-string", "my-modified-string");
+                    //[...]
+
+                    // replace the existing content by calling setTextContents() or setBinaryContents()
+                    contents.setTextContents(newContents);
+                }
+
+                // in the request filter, you can return an HttpResponse object to "short-circuit" the request
+                return null;
+            }
+        });
+        
+        // responses are equally as simple:
+        proxy.addResponseFilter(new ResponseFilter() {
+            @Override
+            public void filterResponse(HttpResponse response, HttpMessageContents contents, HttpMessageInfo messageInfo) {
+                if (/*...some filtering criteria...*/) {
+                    contents.setTextContents("This message body will appear in all responses!");
+                }
+            }
+        });
+```
+
+With Java 8, the syntax is even more concise:
+```java
+        proxy.addResponseFilter((response, contents, messageInfo) -> {
+            if (/*...some filtering criteria...*/) {
+                contents.setTextContents("This message body will appear in all responses!");
+            }
+        });
+```
+
+See the javadoc for the `RequestFilter` and `ResponseFilter` classes for more information.
+
+For fine-grained control over the request and response lifecycle, you can add "filter factories" directly using `addFirstHttpFilterFactory` and `addLastHttpFilterFactory` (see the examples in the InterceptorTest unit tests).
+
+#### <a name="interceptorsRESTapiLP">REST API interceptors with LittleProxy</a>
+
+When running the REST API with LittleProxy enabled, you cannot use the legacy `/:port/interceptor/` endpoints. Instead, POST the javascript payload to the new `/:port/filter/request` and `/:port/filter/response` endpoints.
+
+##### <a name="interceptorsRESTapiLPRequestFilter">Request filters</a>
+
+Javascript request filters have access to the variables `request` (type `io.netty.handler.codec.http.HttpRequest`), `contents` (type `net.lightbody.bmp.util.HttpMessageContents`), and `messageInfo` (type `net.lightbody.bmp.util.HttpMessageInfo`). `messageInfo` contains additional information about the message, including whether the message is sent over HTTP or HTTPS, as well as the original request received from the client before any changes made by previous filters. If the javascript returns an object of type `io.netty.handler.codec.http.HttpResponse`, the HTTP request will "short-circuit" and return the response immediately.
+
+**Example: Modify User-Agent header**
+
+```sh
+curl -i -X POST -H 'Content-Type: text/plain' -d "request.headers().remove('User-Agent'); request.headers().add('User-Agent', 'My-Custom-User-Agent-String 1.0');" http://localhost:8080/proxy/8081/filter/request
+```
+
+##### <a name="interceptorsRESTapiLPResponseFilter">Response filters</a>
+
+Javascript response filters have access to the variables `response` (type `io.netty.handler.codec.http.HttpResponse`), `contents` (type `net.lightbody.bmp.util.HttpMessageContents`), and `messageInfo` (type `net.lightbody.bmp.util.HttpMessageInfo`). As in the request filter, `messageInfo` contains additional information about the message.
+
+**Example: Modify response body**
+
+```sh
+curl -i -X POST -H 'Content-Type: text/plain' -d "contents.setTextContents('<html><body>Response successfully intercepted</body></html>');" http://localhost:8080/proxy/8081/filter/response
+```
+
+#### Legacy interceptors
+
+If you are using the legacy ProxyServer implementation, you can manipulate the requests like so:
+```java
+    BrowserMobProxy server = new ProxyServer();
+    ((LegacyProxyServer)server).addRequestInterceptor(new RequestInterceptor() {
+        @Override
+        public void process(BrowserMobHttpRequest request, Har har) {
+            request.getMethod().removeHeaders("User-Agent");
+            request.getMethod().addHeader("User-Agent", "Bananabot/1.0");
+        }
+    });
+```
+<a name="interceptorsRESTapiLegacy"></a>You can also POST a JavaScript payload to `/:port/interceptor/request` and `/:port/interceptor/response` using the REST interface. The functions will have a `request`/`response` variable, respectively, and a `har` variable (which may be null if a HAR isn't set up yet). The JavaScript code will be run by [Rhino](https://github.com/mozilla/rhino) and have access to the same Java API in the example above:
+
+    [~]$ curl -X POST -H 'Content-Type: text/plain' -d 'request.getMethod().removeHeaders("User-Agent");' http://localhost:8080/proxy/8081/interceptor/request
+    
+Consult the Java API docs for more info.
+
+### SSL Support
+
+**BrowserMob Proxy 2.1.0+ now supports full MITM:** For most users, MITM will work out-of-the-box with default settings. Install the [ca-certificate-rsa.cer](/browsermob-core/src/main/resources/sslSupport/ca-certificate-rsa.cer) file in your browser or HTTP client to avoid untrusted certificate warnings. Generally, it is safer to generate your own private key, rather than using the .cer files distributed with BrowserMob Proxy. See the [README file in the `mitm` module](/mitm/README.md) for instructions on generating or using your own root certificate and private key with MITM.
+
+**Legacy Jetty-based ProxyServer support for MITM:** The legacy `ProxyServer` implementation uses the same `ca-certificate-rsa.cer` root certificate as the default BrowserMobProxyServer implementation. The previous cybervillainsCA.cer certificate has been removed.
+
+**Note: DO NOT** permanently install the .cer files distributed with BrowserMob Proxy in users' browsers. They should be used for testing only and must not be used with general web browsing.
+
+If you're doing testing with Selenium, you'll want to make sure that the browser profile that gets set up by Selenium not only has the proxy configured, but also has the CA installed. Unfortunately, there is no API for doing this in Selenium; it must be done manually for each browser and environment.
+
+### NodeJS Support
+
+NodeJS bindings for browswermob-proxy are available [here](https://github.com/zzo/browsermob-node).  Built-in support for [Selenium](http://seleniumhq.org) or use [CapserJS-on-PhantomJS](http://casperjs.org) or anything else to drive traffic for HAR generation.
+
+### Logging
+
+When running in stand-alone mode, the proxy loads the default logging configuration from the conf/bmp-logging.yaml file. To increase/decrease the logging level, change the logging entry for net.lightbody.bmp.
+
+### DNS Resolution
+
+The BrowserMobProxyServer implementation uses native DNS resolution by default, but supports custom DNS resolution and advanced DNS manipulation. See the [ClientUtil](browsermob-proxy/browsermob-core/src/main/java/net/lightbody/bmp/client/ClientUtil.java) class for information on DNS manipulation using the dnsjava resolver.
+
+## Building the latest from source
+
+You'll need maven (`brew install maven` if you're on OS X); use the `release` profile to generate the batch files from this repository.
+
+    [~]$ mvn -DskipTests -P release
+    
+You'll find the standalone BrowserMob Proxy distributable zip at `browsermob-dist/target/browsermob-proxy-2.1.1-SNAPSHOT-bin.zip`. Unzip the contents and run the `browsermob-proxy` or `browsermob-proxy.bat` files in the `bin` directory.
+
+When you build the latest code from source, you'll have access to the latest snapshot release. To use the SNAPSHOT version in your code, modify the version in your pom:
+```xml
+    <dependency>
+        <groupId>net.lightbody.bmp</groupId>
+        <artifactId>browsermob-core</artifactId>
+        <version>2.1.1-SNAPSHOT</version>
+        <scope>test</scope>
+    </dependency>
+```
Index: sql_handle.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- sql_handle.py	(revision )
+++ sql_handle.py	(revision )
@@ -0,0 +1,74 @@
+# coding: utf-8
+'''
+Created on 2016年9月7日
+
+@author: Administrator
+'''
+import sqlite3
+
+
+class sql_handle:
+    def __init__(self, name):
+        self.conn = sqlite3.connect('data/' + name + '.db')
+
+    def create(self, sqls):
+        self.conn.execute(sqls)
+        print "Table created successfully"
+
+    def into(self, values):
+        cur = self.conn.cursor()
+        cur.executemany('INSERT INTO data_url VALUES(?,?,?,?)', values)
+        self.conn.commit()
+
+    def selects(self, sqls, data):
+        listdata = []
+        if data == 1:
+            cursor = self.conn.execute(sqls)
+        else:
+            cursor = self.conn.execute(sqls, (data,))
+        for i in cursor:
+            listdata.append(i)
+        return listdata
+
+    def read(self, sqls):
+        listdata = []
+        cursor = self.conn.execute(sqls)
+        for row in cursor:
+            listdata.append(row)
+        return listdata
+
+    def return_line(self, sqls):
+        cursor = self.conn.execute(sqls)
+        line = cursor.fetchone()
+        return line[0]
+
+    def updata(self, sqls, data):
+        for i in data:
+            self.conn.execute(sqls % i)
+            self.conn.commit()
+
+    def close(self):
+        self.conn.close()
+
+
+if __name__ == '__main__':
+    sqls = '''CREATE TABLE data_url
+       (id  integer primary key autoincrement ,
+       url TEXT NOT NULL,
+	url_re TEXT NOT NULL,
+       state INT NOT NULL)
+'''
+    p1 = sql_handle('1')
+    # p1.create(sqls)
+    values = [
+        (None, 'dsadas', 'dsada', 1),
+        (None, 'dsadas', 'dsada', 1),
+        (None, 'dsadas', 'dsada', 1),
+    ]
+    p1.into(values)
+    print p1.selects('SELECT *  from data_url where state=1 LIMIT 10', 1)
+    p1.close()
+    '''
+                常用sql
+    SELECT *  from datas where state=1 LIMIT 10
+    '''
